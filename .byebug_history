exit
J.my_other_extension
J.new.my_other_extension
J.new
subject.my_other_extension
subject
subject.class.my_other_extension
subject.class.my_extension
subject.class.my_other_extension
q!
subject.class.my_other_extension
subject.my_extension
subject.my_other_extension
q!
base.new.bar
base.bar
base.class_eval { define_method(:bar) { "bar" } }
base.new.foo
base.foo
base.instance_eval { define_method(:foo) { "foo" } }
base.instance_eval { define_method(:foo) { "foo"  }
base.class
base
base.class_eval { puts self.class }
base.instance_eval { puts self.class }
base.instance_eval { puts self }
base.class_eval { puts self }
c
subject.my_extension
subject.class.included_modules
subject
subejct
c
q!
ObjectSpace.each_object { |o| !
ObjectSpace.each_object.to_a
ObjectSpace.methods - Class.methods
ObjectSpace.to_a
ObjectSpace
ObjectSpace.find
c
subject.class.included_modules
q!
subject.class.included_modules
subject.included_modules
subject.my_extension
